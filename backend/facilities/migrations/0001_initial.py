# Generated by Django 5.2.6 on 2025-10-03 16:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('section_type', models.CharField(choices=[('info', 'Information'), ('metrics', 'Metrics'), ('status', 'Status'), ('controls', 'Controls'), ('reports', 'Reports')], max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('field_schema', models.JSONField(default=dict, help_text='Field definitions for this section')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('street_address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(default='United States', max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('facility_type', models.CharField(choices=[('gas_station', 'Gas Station'), ('truck_stop', 'Truck Stop'), ('storage_facility', 'Storage Facility'), ('distribution_center', 'Distribution Center'), ('terminal', 'Terminal'), ('convenience_store', 'Convenience Store')], default='gas_station', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_locations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FacilityProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_id', models.CharField(blank=True, max_length=50)),
                ('state_id_number', models.CharField(blank=True, max_length=50)),
                ('county', models.CharField(blank=True, max_length=100)),
                ('store_open_date', models.DateField(blank=True, null=True)),
                ('operational_region', models.CharField(blank=True, max_length=100)),
                ('tos_pos_date', models.DateField(blank=True, null=True)),
                ('gas_brand', models.CharField(default='Phillips', max_length=100)),
                ('store_operator_type', models.CharField(blank=True, max_length=100)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('operational_district', models.CharField(blank=True, max_length=100)),
                ('lease_own', models.CharField(blank=True, max_length=50)),
                ('owner_id', models.CharField(blank=True, max_length=50)),
                ('tank_owner', models.CharField(blank=True, max_length=100)),
                ('tank_operator', models.CharField(blank=True, max_length=100)),
                ('num_ast', models.PositiveIntegerField(default=0)),
                ('num_ust_registered', models.PositiveIntegerField(default=0)),
                ('num_mpds', models.PositiveIntegerField(default=0)),
                ('insured', models.BooleanField(default=False)),
                ('remodel_close_date', models.DateField(blank=True, null=True)),
                ('remodel_open_date', models.DateField(blank=True, null=True)),
                ('reason_for_remodel', models.CharField(blank=True, max_length=200)),
                ('channel_of_trade', models.CharField(blank=True, max_length=100)),
                ('car_service_center', models.CharField(blank=True, max_length=100)),
                ('truck_service_center', models.CharField(blank=True, max_length=100)),
                ('bus_maintenance', models.CharField(blank=True, max_length=100)),
                ('defueling_site', models.CharField(blank=True, max_length=100)),
                ('defueling_method', models.CharField(blank=True, max_length=100)),
                ('compliance_manager_name', models.CharField(blank=True, max_length=100)),
                ('compliance_manager_phone', models.CharField(blank=True, max_length=20)),
                ('compliance_manager_email', models.EmailField(blank=True, max_length=254)),
                ('store_manager_name', models.CharField(blank=True, max_length=100)),
                ('store_manager_phone', models.CharField(blank=True, max_length=20)),
                ('store_manager_email', models.EmailField(blank=True, max_length=254)),
                ('testing_vendor_name', models.CharField(blank=True, max_length=100)),
                ('testing_vendor_phone', models.CharField(blank=True, max_length=20)),
                ('testing_vendor_email', models.EmailField(blank=True, max_length=254)),
                ('operating_hours', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='facilities.location')),
            ],
        ),
        migrations.CreateModel(
            name='LocationDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard', to='facilities.location')),
            ],
        ),
        migrations.CreateModel(
            name='DashboardSectionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(default=dict, help_text='Actual data values for this section')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='facilities.dashboardsection')),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='facilities.locationdashboard')),
            ],
            options={
                'unique_together': {('dashboard', 'section')},
            },
        ),
        migrations.CreateModel(
            name='Permit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permit_type', models.CharField(choices=[('operating', 'Operating Permit'), ('environmental', 'Environmental Permit'), ('safety', 'Safety Permit'), ('construction', 'Construction Permit')], max_length=20)),
                ('permit_number', models.CharField(max_length=100)),
                ('issuing_authority', models.CharField(max_length=200)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('expired', 'Expired'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('renewal_required', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permits', to='facilities.location')),
            ],
            options={
                'ordering': ['location', 'expiry_date'],
                'unique_together': {('location', 'permit_number')},
            },
        ),
        migrations.CreateModel(
            name='Tank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='Unlabeled', help_text='Tank identifier/label', max_length=100)),
                ('product', models.CharField(blank=True, help_text='Product stored in tank', max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance'), ('out_of_service', 'Out of Service')], default='active', max_length=20)),
                ('size', models.CharField(blank=True, help_text='Tank size/capacity', max_length=50)),
                ('tank_lined', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=3)),
                ('compartment', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=3)),
                ('manifolded_with', models.CharField(blank=True, help_text='Other tanks this is manifolded with', max_length=200)),
                ('piping_manifolded_with', models.CharField(blank=True, help_text='Piping manifold connections', max_length=200)),
                ('track_release_detection', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=3)),
                ('tank_material', models.CharField(blank=True, help_text='Tank construction material', max_length=100)),
                ('release_detection', models.CharField(blank=True, help_text='Release detection method', max_length=200)),
                ('stp_sumps', models.CharField(blank=True, help_text='STP sumps information', max_length=100)),
                ('piping_detection', models.CharField(blank=True, help_text='Piping detection method', max_length=200)),
                ('piping_material', models.CharField(blank=True, help_text='Piping material', max_length=100)),
                ('atg_id', models.CharField(blank=True, help_text='ATG system identifier', max_length=50)),
                ('installed', models.CharField(blank=True, help_text='Installation date', max_length=20)),
                ('piping_installed', models.CharField(blank=True, help_text='Piping installation date', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tanks', to='facilities.location')),
            ],
            options={
                'ordering': ['location', 'label'],
                'constraints': [models.UniqueConstraint(fields=('location', 'label'), name='uniq_location_label')],
            },
        ),
    ]
